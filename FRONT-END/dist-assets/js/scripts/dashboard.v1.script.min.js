"use strict";
$(document).ready(function () {

// Relação de projectos por sector
  var chartPieResultOptions = {
    chart: {
      width: '100%',
      height: '350px',
      type: 'pie'
    },
    labels: [],
    series: [],
    legend: {
      position: 'bottom'
    },
    responsive: [{
      breakpoint: 480,
      options: {
        chart: {
          width: 300
        },
        legend: {
          position: 'bottom',
          offsetY: 40
        }
      }
    }]
  };
  var chartPieResult = new ApexCharts(document.querySelector("#activities_by_results"), chartPieResultOptions);
  chartPieResult.render();

  var chartPieStatusOptions = {
    chart: {
      width: '100%',
      height: '350px',
      type: 'pie'
    },
    labels: [],
    series: [],
    legend: {
      position: 'bottom'
    },
    responsive: [{
      breakpoint: 480,
      options: {
        chart: {
          width: 300
        },
        legend: {
          position: 'bottom',
          offsetY: 40
        }
      }
    }]
  };
  var chartPieStatus = new ApexCharts(document.querySelector("#activities_by_status"), chartPieStatusOptions);
  chartPieStatus.render();
   // ================= Stacked ================

  // Relação de projectos por Financiador
  var barChartOperatoroptions = {
    chart: {
      height: 350,
      type: 'bar'
    },
    plotOptions: {
      bar: {
        horizontal: true,
        endingShape: 'rounded'
      }
    },
    dataLabels: {
      enabled: true
    },
    series: [{
      data: []
    }],
    xaxis: {
      categories: []
    }
  };
  var barChartOperator = new ApexCharts(document.querySelector("#activities_by_operator"), barChartOperatoroptions);
  barChartOperator.render();
  // Chart in Dashboard version 1

  /* Relação de Projectos por Ano */
  var lineChartDayOptions = {
    chart: {
      height: 350,
      type: 'line',
      dropShadow: {
        enabled: true,
        top: 3,
        left: 3,
        blur: 1,
        opacity: 0.2
      },
      zoom: {
        enabled: false
      },
      toolbar: {
        show: true
      }
    },
    tooltip: {
      enabled: true,
      shared: true,
      followCursor: false,
      intersect: false,
      inverseOrder: false,
      custom: undefined,
      fillSeriesColor: false,
      theme: false
    },
    fill: {
      type: 'gradient',
      gradient: {
        shade: 'dark',
        gradientToColors: ['#FDD835'],
        shadeIntensity: 1,
        type: 'horizontal',
        opacityFrom: 1,
        opacityTo: 1,
        stops: [0, 100, 100, 100]
      }
    },
    markers: {
      size: 4,
      opacity: 0.9,
      colors: ["#FFA41B"],
      strokeColor: "#fff",
      strokeWidth: 2,
      hover: {
        size: 7
      }
    },
    dataLabels: {
      enabled: false
    },
    stroke: {
      curve: 'smooth'
    },
    series: [],
    grid: {
      row: {
        colors: ['#f3f3f3', 'transparent'],
        // takes an array which will be repeated on columns
        opacity: 0.5
      }
    },
    xaxis: {
      categories: []
    },
    markers: {
      size: 6
    },
    dataLabels: {
      enabled: true
    },
  };
  var lineChartDay = new ApexCharts(document.querySelector("#activities_per_day"), lineChartDayOptions);
  lineChartDay.render(); // line chart with Data Label
  /* Line chart */


  /* Pesquisa de dados */
  $(document).on("change click",".search",function () {
    let searchType = $(this).attr('value')
    updateDashboard(searchType)
  })/* Fim da pesquisa de dados */


  updateDashboard()
  function updateDashboard(searchType) {
    let inspector = $("#inspector").val()
    let activity = $('#srs_activity').val();
    let data_inicio = $("#data_inicio").val()
    let data_fim = $('#data_fim').val();
    let operator = $("#operator_name").val()
    $.ajax({
      url: './app/api/report/quantitiesReport.php',
      type: 'GET',
      dataType: "json",
      data: {
        inspector: inspector,
        activity: activity,
        data_inicio: data_inicio,
        data_fim: data_fim,
        operator: operator
      },
      success: function(response){

        $("#total_activities").text(response.total_activity)
        $("#planned_activities").text(response.total_activity_planned)
        $("#not_planned").text(response.total_activity_not_planned)
        $("#open_activities").text(response.total_activity_opened)
        $("#closed_activities").text(response.total_activity_closed)
        $("#created_plans").text(response.total_plan)


        if(response.activity_by_results.labels.length > 0){
          // alert("tem")
          // if(sector != ""){
            chartPieResult.updateOptions({
              labels: response.activity_by_results.labels,
              series: response.activity_by_results.series,
            });
          // }else{
          //   chartPieSectores.updateOptions({
          //     labels: response.sectores.labels,
          //     series: response.sectores.series,
          //   });
          // }
      }else{
        // alert("Não tem")
        chartPieResult.updateOptions({
          labels: ['Sem Dados'],
          series: [0],
        });
      }

    //   if(response.activity_by_status.labels.length > 0){
    //     // alert("tem")
    //     // if(sector != ""){
    //       chartPieStatus.updateOptions({
    //         labels: response.activity_by_status.labels,
    //         series: response.activity_by_status.series,
    //       });
    //     // }else{
    //     //   chartPieSectores.updateOptions({
    //     //     labels: response.sectores.labels,
    //     //     series: response.sectores.series,
    //     //   });
    //     // }
    // }else{
    //   // alert("Não tem")
    //   chartPieStatus.updateOptions({
    //     labels: ['Sem Dados'],
    //     series: [0],
    //   });
    // }
//         alert("")
// console.log(response.activity_per_operator)
        barChartOperator.updateOptions({
          series: [{
            data: response.activity_per_operator.series
          }],
          xaxis: {
            categories: response.activity_per_operator.xaxis
          }
        })

        lineChartDay.updateOptions({
          series: [{
            name: "Activities Per Day",
            data: response.activity_per_day.series
          }],
          xaxis: {
            categories: response.activity_per_day.xaxis
          }
        })

      },
    });
  }

});